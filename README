# VisionGuard – Automated License Plate Recognition (ALPR)

VisionGuard is a Python-based ALPR system designed for real-time or image-based license plate detection, OCR recognition, and result logging. Built with *OpenCV, **Tesseract OCR, and optional **Google Gemini AI* post-processing, it provides both CLI and GUI modes with an integrated SQLite database for storing recognized plates.

---

## ✦ Features
- Real-time video feed license plate detection.  
- Static image recognition with OCR.  
- Optional cleanup of OCR output using Gemini API.  
- Automatic logging of results to SQLite.  
- Minimal Tkinter GUI for live video and history browsing.  
- Configurable via .env and config.ini.  

---

## ✦ Requirements
- *Python 3.13* (or newer).  
- *Tesseract OCR* installed and added to PATH.  
  - Windows: [UB Mannheim Tesseract](https://github.com/UB-Mannheim/tesseract/wiki)  
  - macOS: brew install tesseract  
  - Linux (Debian/Ubuntu): sudo apt-get install tesseract-ocr  

Install Python dependencies:
bash
pip install -r requirements.txt


---

## ✦ Quick Start

1. Clone the repository:
   bash
   git clone https://github.com/TwilightAshen3196/visionguard-fyp.git
   cd visionguard-fyp
   

2. Copy .env.example → .env and add your *Gemini API key* (optional).  

3. Run in camera mode:
   bash
   python -m src.main --camera
   

4. Run on an image:
   bash
   python -m src.main --image path/to/image.jpg
   

---

## ✦ Configuration
Settings are stored in config.ini:
- *[app]* – camera index, database path, snapshot directory.  
- *[processing]* – thresholds, blur, contour area, aspect ratio for plate detection.  
- *[gemini]* – model selection and API enable toggle.  

---

## ✦ Project Structure

visionguard-fyp/
├─ data/              # auto-generated storage
│  ├─ db/             # SQLite database
│  └─ logs/           # log & snapshots
├─ src/               # source code
│  ├─ alpr.py         # detection & OCR
│  ├─ db.py           # database operations
│  ├─ gemini_client.py# optional Gemini cleanup
│  ├─ logging_setup.py# logging config
│  ├─ main.py         # CLI entrypoint
│  └─ gui.py          # Tkinter GUI
├─ tests/             # basic pytest tests
├─ requirements.txt
├─ config.ini
├─ .env.example
└─ README.md


---

## ✦ License
MIT License – free to use, modify, and distribute.